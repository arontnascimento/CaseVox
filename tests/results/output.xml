<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.1.1 (Python 3.8.10 on linux)" generated="20240704 16:12:41.153" rpa="false" schemaversion="4">
<suite id="s1" name="testeAPI" source="/home/aron.nascimento/robot/tests/testeAPI.robot">
<test id="s1-t1" name="GET validando o nome Leanne Graham no retorno" line="10">
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${URL}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20240704 16:12:41.222" level="INFO">Creating Session using : alias=session, url=http://jsonplaceholder.typicode.com/users, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20240704 16:12:41.222" endtime="20240704 16:12:41.223"/>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${URL}</arg>
<doc>*DEPRECATED* Please use `GET On Session` instead.</doc>
<msg timestamp="20240704 16:12:41.223" level="WARN">Keyword 'RequestsLibrary.Get Request' is deprecated. Please use `GET On Session` instead.</msg>
<msg timestamp="20240704 16:12:41.613" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/users 
 path_url=/users 
 headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20240704 16:12:41.614" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/users 
 status=200, reason=OK 
 headers={'Date': 'Thu, 04 Jul 2024 19:13:40 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Report-To': '{"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1705117076&amp;sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d&amp;s=MzpQVa21jRpVuwBGcsyIKIkh57Lyz2Z6P4ylGhhkzMs%3D"}]}', 'Reporting-Endpoints': 'heroku-nel=https://nel.heroku.com/reports?ts=1705117076&amp;sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d&amp;s=MzpQVa21jRpVuwBGcsyIKIkh57Lyz2Z6P4ylGhhkzMs%3D', 'Nel': '{"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '999', 'X-Ratelimit-Reset': '1705117098', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"160d-1eMSsxeJRfnVLRBmYJSbCiJZ1qQ"', 'Content-Encoding': 'gzip', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '5693', 'Server': 'cloudflare', 'CF-RAY': '89e16f159c192618-GIG', 'alt-svc': 'h3=":443"; ma=86400'} 
 body=[
  {
    "id": 1,
    "name": "Leanne Graham",
    "username": "Bret",
    "email": "Sincere@april.biz",
    "address": {
      "street": "Kulas Light",
      "suite": "Apt. 556",
      "city": "Gwenborough",
      "zipcode": "92998-3874",
      "geo": {
        "lat": "-37.3159",
        "lng": "81.1496"
      }
    },
    "phone": "1-770-736-8031 x56442",
    "website": "hildegard.org",
    "company": {
      "name": "Romaguera-Crona",
      "catchPhrase": "Multi-layered client-server neural-net",
      "bs": "harness real-time e-markets"
    }
  },
  {
    "id": 2,
    "name": "Ervin Howell",
    "username": "Antonette",
    "email": "Shanna@melissa.tv",
    "address": {
      "street": "Victor Plains",
      "suite": "Suite 879",
      "city": "Wisokyburgh",
      "zipcode": "90566-7771",
      "geo": {
        "lat": "-43.9509",
        "lng": "-34.4618"
      }
    },
    "phone": "010-692-6593 x09125",
    "website": "anastasia.net",
    "company": {
      "name": "Deckow-Crist",
      "catchPhrase": "Proactive didactic contingency",
      "bs": "synergize scalable supply-chains"
    }
  },
  {
    "id": 3,
    "name": "Clementine Bauch",
    "username": "Samantha",
    "email": "Nathan@yesenia.net",
    "address": {
      "street": "Douglas Extension",
      "suite": "Suite 847",
      "city": "McKenziehaven",
      "zipcode": "59590-4157",
      "geo": {
        "lat": "-68.6102",
        "lng": "-47.0653"
      }
    },
    "phone": "1-463-123-4447",
    "website": "ramiro.info",
    "company": {
      "name": "Romaguera-Jacobson",
      "catchPhrase": "Face to face bifurcated interface",
      "bs": "e-enable strategic applications"
    }
  },
  {
    "id": 4,
    "name": "Patricia Lebsack",
    "username": "Karianne",
    "email": "Julianne.OConner@kory.org",
    "address": {
      "street": "Hoeger Mall",
      "suite": "Apt. 692",
      "city": "South Elvis",
      "zipcode": "53919-4257",
      "geo": {
        "lat": "29.4572",
        "lng": "-164.2990"
      }
    },
    "phone": "493-170-9623 x156",
    "website": "kale.biz",
    "company": {
      "name": "Robel-Corkery",
      "catchPhrase": "Multi-tiered zero tolerance productivity",
      "bs": "transition cutting-edge web services"
    }
  },
  {
    "id": 5,
    "name": "Chelsey Dietrich",
    "username": "Kamren",
    "email": "Lucio_Hettinger@annie.ca",
    "address": {
      "street": "Skiles Walks",
      "suite": "Suite 351",
      "city": "Roscoeview",
      "zipcode": "33263",
      "geo": {
        "lat": "-31.8129",
        "lng": "62.5342"
      }
    },
    "phone": "(254)954-1289",
    "website": "demarco.info",
    "company": {
      "name": "Keebler LLC",
      "catchPhrase": "User-centric fault-tolerant solution",
      "bs": "revolutionize end-to-end systems"
    }
  },
  {
    "id": 6,
    "name": "Mrs. Dennis Schulist",
    "username": "Leopoldo_Corkery",
    "email": "Karley_Dach@jasper.info",
    "address": {
      "street": "Norberto Crossing",
      "suite": "Apt. 950",
      "city": "South Christy",
      "zipcode": "23505-1337",
      "geo": {
        "lat": "-71.4197",
        "lng": "71.7478"
      }
    },
    "phone": "1-477-935-8478 x6430",
    "website": "ola.org",
    "company": {
      "name": "Considine-Lockman",
      "catchPhrase": "Synchronised bottom-line interface",
      "bs": "e-enable innovative applications"
    }
  },
  {
    "id": 7,
    "name": "Kurtis Weissnat",
    "username": "Elwyn.Skiles",
    "email": "Telly.Hoeger@billy.biz",
    "address": {
      "street": "Rex Trail",
      "suite": "Suite 280",
      "city": "Howemouth",
      "zipcode": "58804-1099",
      "geo": {
        "lat": "24.8918",
        "lng": "21.8984"
      }
    },
    "phone": "210.067.6132",
    "website": "elvis.io",
    "company": {
      "name": "Johns Group",
      "catchPhrase": "Configurable multimedia task-force",
      "bs": "generate enterprise e-tailers"
    }
  },
  {
    "id": 8,
    "name": "Nicholas Runolfsdottir V",
    "username": "Maxime_Nienow",
    "email": "Sherwood@rosamond.me",
    "address": {
      "street": "Ellsworth Summit",
      "suite": "Suite 729",
      "city": "Aliyaview",
      "zipcode": "45169",
      "geo": {
        "lat": "-14.3990",
        "lng": "-120.7677"
      }
    },
    "phone": "586.493.6943 x140",
    "website": "jacynthe.com",
    "company": {
      "name": "Abernathy Group",
      "catchPhrase": "Implemented secondary concept",
      "bs": "e-enable extensible e-tailers"
    }
  },
  {
    "id": 9,
    "name": "Glenna Reichert",
    "username": "Delphine",
    "email": "Chaim_McDermott@dana.io",
    "address": {
      "street": "Dayna Park",
      "suite": "Suite 449",
      "city": "Bartholomebury",
      "zipcode": "76495-3109",
      "geo": {
        "lat": "24.6463",
        "lng": "-168.8889"
      }
    },
    "phone": "(775)976-6794 x41206",
    "website": "conrad.com",
    "company": {
      "name": "Yost and Sons",
      "catchPhrase": "Switchable contextually-based project",
      "bs": "aggregate real-time technologies"
    }
  },
  {
    "id": 10,
    "name": "Clementina DuBuque",
    "username": "Moriah.Stanton",
    "email": "Rey.Padberg@karina.biz",
    "address": {
      "street": "Kattie Turnpike",
      "suite": "Suite 198",
      "city": "Lebsackbury",
      "zipcode": "31428-2261",
      "geo": {
        "lat": "-38.2386",
        "lng": "57.2232"
      }
    },
    "phone": "024-648-3804",
    "website": "ambrose.net",
    "company": {
      "name": "Hoeger LLC",
      "catchPhrase": "Centralized empowering task-force",
      "bs": "target end-to-end models"
    }
  }
] 
 </msg>
<msg timestamp="20240704 16:12:41.615" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240704 16:12:41.223" endtime="20240704 16:12:41.615"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20240704 16:12:41.615" endtime="20240704 16:12:41.616"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20240704 16:12:41.619" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240704 16:12:41.617" endtime="20240704 16:12:41.619"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${json_response}</var>
<arg>${response.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240704 16:12:41.623" level="INFO">${json_response} = [{'id': 1, 'name': 'Leanne Graham', 'username': 'Bret', 'email': 'Sincere@april.biz', 'address': {'street': 'Kulas Light', 'suite': 'Apt. 556', 'city': 'Gwenborough', 'zipcode': '92998-3874', 'geo': {...</msg>
<status status="PASS" starttime="20240704 16:12:41.620" endtime="20240704 16:12:41.623"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${json_response}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240704 16:12:41.625" level="INFO">[{'id': 1, 'name': 'Leanne Graham', 'username': 'Bret', 'email': 'Sincere@april.biz', 'address': {'street': 'Kulas Light', 'suite': 'Apt. 556', 'city': 'Gwenborough', 'zipcode': '92998-3874', 'geo': {'lat': '-37.3159', 'lng': '81.1496'}}, 'phone': '1-770-736-8031 x56442', 'website': 'hildegard.org', 'company': {'name': 'Romaguera-Crona', 'catchPhrase': 'Multi-layered client-server neural-net', 'bs': 'harness real-time e-markets'}}, {'id': 2, 'name': 'Ervin Howell', 'username': 'Antonette', 'email': 'Shanna@melissa.tv', 'address': {'street': 'Victor Plains', 'suite': 'Suite 879', 'city': 'Wisokyburgh', 'zipcode': '90566-7771', 'geo': {'lat': '-43.9509', 'lng': '-34.4618'}}, 'phone': '010-692-6593 x09125', 'website': 'anastasia.net', 'company': {'name': 'Deckow-Crist', 'catchPhrase': 'Proactive didactic contingency', 'bs': 'synergize scalable supply-chains'}}, {'id': 3, 'name': 'Clementine Bauch', 'username': 'Samantha', 'email': 'Nathan@yesenia.net', 'address': {'street': 'Douglas Extension', 'suite': 'Suite 847', 'city': 'McKenziehaven', 'zipcode': '59590-4157', 'geo': {'lat': '-68.6102', 'lng': '-47.0653'}}, 'phone': '1-463-123-4447', 'website': 'ramiro.info', 'company': {'name': 'Romaguera-Jacobson', 'catchPhrase': 'Face to face bifurcated interface', 'bs': 'e-enable strategic applications'}}, {'id': 4, 'name': 'Patricia Lebsack', 'username': 'Karianne', 'email': 'Julianne.OConner@kory.org', 'address': {'street': 'Hoeger Mall', 'suite': 'Apt. 692', 'city': 'South Elvis', 'zipcode': '53919-4257', 'geo': {'lat': '29.4572', 'lng': '-164.2990'}}, 'phone': '493-170-9623 x156', 'website': 'kale.biz', 'company': {'name': 'Robel-Corkery', 'catchPhrase': 'Multi-tiered zero tolerance productivity', 'bs': 'transition cutting-edge web services'}}, {'id': 5, 'name': 'Chelsey Dietrich', 'username': 'Kamren', 'email': 'Lucio_Hettinger@annie.ca', 'address': {'street': 'Skiles Walks', 'suite': 'Suite 351', 'city': 'Roscoeview', 'zipcode': '33263', 'geo': {'lat': '-31.8129', 'lng': '62.5342'}}, 'phone': '(254)954-1289', 'website': 'demarco.info', 'company': {'name': 'Keebler LLC', 'catchPhrase': 'User-centric fault-tolerant solution', 'bs': 'revolutionize end-to-end systems'}}, {'id': 6, 'name': 'Mrs. Dennis Schulist', 'username': 'Leopoldo_Corkery', 'email': 'Karley_Dach@jasper.info', 'address': {'street': 'Norberto Crossing', 'suite': 'Apt. 950', 'city': 'South Christy', 'zipcode': '23505-1337', 'geo': {'lat': '-71.4197', 'lng': '71.7478'}}, 'phone': '1-477-935-8478 x6430', 'website': 'ola.org', 'company': {'name': 'Considine-Lockman', 'catchPhrase': 'Synchronised bottom-line interface', 'bs': 'e-enable innovative applications'}}, {'id': 7, 'name': 'Kurtis Weissnat', 'username': 'Elwyn.Skiles', 'email': 'Telly.Hoeger@billy.biz', 'address': {'street': 'Rex Trail', 'suite': 'Suite 280', 'city': 'Howemouth', 'zipcode': '58804-1099', 'geo': {'lat': '24.8918', 'lng': '21.8984'}}, 'phone': '210.067.6132', 'website': 'elvis.io', 'company': {'name': 'Johns Group', 'catchPhrase': 'Configurable multimedia task-force', 'bs': 'generate enterprise e-tailers'}}, {'id': 8, 'name': 'Nicholas Runolfsdottir V', 'username': 'Maxime_Nienow', 'email': 'Sherwood@rosamond.me', 'address': {'street': 'Ellsworth Summit', 'suite': 'Suite 729', 'city': 'Aliyaview', 'zipcode': '45169', 'geo': {'lat': '-14.3990', 'lng': '-120.7677'}}, 'phone': '586.493.6943 x140', 'website': 'jacynthe.com', 'company': {'name': 'Abernathy Group', 'catchPhrase': 'Implemented secondary concept', 'bs': 'e-enable extensible e-tailers'}}, {'id': 9, 'name': 'Glenna Reichert', 'username': 'Delphine', 'email': 'Chaim_McDermott@dana.io', 'address': {'street': 'Dayna Park', 'suite': 'Suite 449', 'city': 'Bartholomebury', 'zipcode': '76495-3109', 'geo': {'lat': '24.6463', 'lng': '-168.8889'}}, 'phone': '(775)976-6794 x41206', 'website': 'conrad.com', 'company': {'name': 'Yost and Sons', 'catchPhrase': 'Switchable contextually-based project', 'bs': 'aggregate real-time technologies'}}, {'id': 10, 'name': 'Clementina DuBuque', 'username': 'Moriah.Stanton', 'email': 'Rey.Padberg@karina.biz', 'address': {'street': 'Kattie Turnpike', 'suite': 'Suite 198', 'city': 'Lebsackbury', 'zipcode': '31428-2261', 'geo': {'lat': '-38.2386', 'lng': '57.2232'}}, 'phone': '024-648-3804', 'website': 'ambrose.net', 'company': {'name': 'Hoeger LLC', 'catchPhrase': 'Centralized empowering task-force', 'bs': 'target end-to-end models'}}]</msg>
<status status="PASS" starttime="20240704 16:12:41.624" endtime="20240704 16:12:41.625"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240704 16:12:41.627" level="INFO">200</msg>
<status status="PASS" starttime="20240704 16:12:41.626" endtime="20240704 16:12:41.628"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${response.content}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240704 16:12:41.629" level="INFO">[
  {
    "id": 1,
    "name": "Leanne Graham",
    "username": "Bret",
    "email": "Sincere@april.biz",
    "address": {
      "street": "Kulas Light",
      "suite": "Apt. 556",
      "city": "Gwenborough",
      "zipcode": "92998-3874",
      "geo": {
        "lat": "-37.3159",
        "lng": "81.1496"
      }
    },
    "phone": "1-770-736-8031 x56442",
    "website": "hildegard.org",
    "company": {
      "name": "Romaguera-Crona",
      "catchPhrase": "Multi-layered client-server neural-net",
      "bs": "harness real-time e-markets"
    }
  },
  {
    "id": 2,
    "name": "Ervin Howell",
    "username": "Antonette",
    "email": "Shanna@melissa.tv",
    "address": {
      "street": "Victor Plains",
      "suite": "Suite 879",
      "city": "Wisokyburgh",
      "zipcode": "90566-7771",
      "geo": {
        "lat": "-43.9509",
        "lng": "-34.4618"
      }
    },
    "phone": "010-692-6593 x09125",
    "website": "anastasia.net",
    "company": {
      "name": "Deckow-Crist",
      "catchPhrase": "Proactive didactic contingency",
      "bs": "synergize scalable supply-chains"
    }
  },
  {
    "id": 3,
    "name": "Clementine Bauch",
    "username": "Samantha",
    "email": "Nathan@yesenia.net",
    "address": {
      "street": "Douglas Extension",
      "suite": "Suite 847",
      "city": "McKenziehaven",
      "zipcode": "59590-4157",
      "geo": {
        "lat": "-68.6102",
        "lng": "-47.0653"
      }
    },
    "phone": "1-463-123-4447",
    "website": "ramiro.info",
    "company": {
      "name": "Romaguera-Jacobson",
      "catchPhrase": "Face to face bifurcated interface",
      "bs": "e-enable strategic applications"
    }
  },
  {
    "id": 4,
    "name": "Patricia Lebsack",
    "username": "Karianne",
    "email": "Julianne.OConner@kory.org",
    "address": {
      "street": "Hoeger Mall",
      "suite": "Apt. 692",
      "city": "South Elvis",
      "zipcode": "53919-4257",
      "geo": {
        "lat": "29.4572",
        "lng": "-164.2990"
      }
    },
    "phone": "493-170-9623 x156",
    "website": "kale.biz",
    "company": {
      "name": "Robel-Corkery",
      "catchPhrase": "Multi-tiered zero tolerance productivity",
      "bs": "transition cutting-edge web services"
    }
  },
  {
    "id": 5,
    "name": "Chelsey Dietrich",
    "username": "Kamren",
    "email": "Lucio_Hettinger@annie.ca",
    "address": {
      "street": "Skiles Walks",
      "suite": "Suite 351",
      "city": "Roscoeview",
      "zipcode": "33263",
      "geo": {
        "lat": "-31.8129",
        "lng": "62.5342"
      }
    },
    "phone": "(254)954-1289",
    "website": "demarco.info",
    "company": {
      "name": "Keebler LLC",
      "catchPhrase": "User-centric fault-tolerant solution",
      "bs": "revolutionize end-to-end systems"
    }
  },
  {
    "id": 6,
    "name": "Mrs. Dennis Schulist",
    "username": "Leopoldo_Corkery",
    "email": "Karley_Dach@jasper.info",
    "address": {
      "street": "Norberto Crossing",
      "suite": "Apt. 950",
      "city": "South Christy",
      "zipcode": "23505-1337",
      "geo": {
        "lat": "-71.4197",
        "lng": "71.7478"
      }
    },
    "phone": "1-477-935-8478 x6430",
    "website": "ola.org",
    "company": {
      "name": "Considine-Lockman",
      "catchPhrase": "Synchronised bottom-line interface",
      "bs": "e-enable innovative applications"
    }
  },
  {
    "id": 7,
    "name": "Kurtis Weissnat",
    "username": "Elwyn.Skiles",
    "email": "Telly.Hoeger@billy.biz",
    "address": {
      "street": "Rex Trail",
      "suite": "Suite 280",
      "city": "Howemouth",
      "zipcode": "58804-1099",
      "geo": {
        "lat": "24.8918",
        "lng": "21.8984"
      }
    },
    "phone": "210.067.6132",
    "website": "elvis.io",
    "company": {
      "name": "Johns Group",
      "catchPhrase": "Configurable multimedia task-force",
      "bs": "generate enterprise e-tailers"
    }
  },
  {
    "id": 8,
    "name": "Nicholas Runolfsdottir V",
    "username": "Maxime_Nienow",
    "email": "Sherwood@rosamond.me",
    "address": {
      "street": "Ellsworth Summit",
      "suite": "Suite 729",
      "city": "Aliyaview",
      "zipcode": "45169",
      "geo": {
        "lat": "-14.3990",
        "lng": "-120.7677"
      }
    },
    "phone": "586.493.6943 x140",
    "website": "jacynthe.com",
    "company": {
      "name": "Abernathy Group",
      "catchPhrase": "Implemented secondary concept",
      "bs": "e-enable extensible e-tailers"
    }
  },
  {
    "id": 9,
    "name": "Glenna Reichert",
    "username": "Delphine",
    "email": "Chaim_McDermott@dana.io",
    "address": {
      "street": "Dayna Park",
      "suite": "Suite 449",
      "city": "Bartholomebury",
      "zipcode": "76495-3109",
      "geo": {
        "lat": "24.6463",
        "lng": "-168.8889"
      }
    },
    "phone": "(775)976-6794 x41206",
    "website": "conrad.com",
    "company": {
      "name": "Yost and Sons",
      "catchPhrase": "Switchable contextually-based project",
      "bs": "aggregate real-time technologies"
    }
  },
  {
    "id": 10,
    "name": "Clementina DuBuque",
    "username": "Moriah.Stanton",
    "email": "Rey.Padberg@karina.biz",
    "address": {
      "street": "Kattie Turnpike",
      "suite": "Suite 198",
      "city": "Lebsackbury",
      "zipcode": "31428-2261",
      "geo": {
        "lat": "-38.2386",
        "lng": "57.2232"
      }
    },
    "phone": "024-648-3804",
    "website": "ambrose.net",
    "company": {
      "name": "Hoeger LLC",
      "catchPhrase": "Centralized empowering task-force",
      "bs": "target end-to-end models"
    }
  }
]</msg>
<status status="PASS" starttime="20240704 16:12:41.628" endtime="20240704 16:12:41.630"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${response_content_string}</var>
<arg>${response.content}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20240704 16:12:41.632" level="INFO">${response_content_string} = [
  {
    "id": 1,
    "name": "Leanne Graham",
    "username": "Bret",
    "email": "Sincere@april.biz",
    "address": {
      "street": "Kulas Light",
      "suite": "Apt. 556",
      "city": "Gwen...</msg>
<status status="PASS" starttime="20240704 16:12:41.630" endtime="20240704 16:12:41.632"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${response_content_string}</arg>
<arg>"name": "Leanne Graham"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240704 16:12:41.633" endtime="20240704 16:12:41.633"/>
</kw>
<status status="PASS" starttime="20240704 16:12:41.221" endtime="20240704 16:12:41.634"/>
</test>
<test id="s1-t2" name="Post" line="24">
<kw name="Set Variable" library="BuiltIn">
<var>${BODY}</var>
<arg>{"name": "Aron Tiago","username": "Bret","email": "Sincere@april.biz","address": {"street": "Kulas Light","suite": "Apt. 556","city": "Gwenborough","zipcode": "92998-3874","geo": {"lat": "-37.3159","lng": "81.1496"}},"phone": "1-770-736-8031 x56442","website": "hildegard.org","company": {"name": "Romaguera-Crona","catchPhrase": "Multi-layered client-server neural-net","bs": "harness real-time e-markets"}}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240704 16:12:41.636" level="INFO">${BODY} = {"name": "Aron Tiago","username": "Bret","email": "Sincere@april.biz","address": {"street": "Kulas Light","suite": "Apt. 556","city": "Gwenborough","zipcode": "92998-3874","geo": {"lat": "-37.3159","l...</msg>
<status status="PASS" starttime="20240704 16:12:41.635" endtime="20240704 16:12:41.636"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${URL}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20240704 16:12:41.637" level="INFO">Creating Session using : alias=session, url=http://jsonplaceholder.typicode.com/users, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20240704 16:12:41.636" endtime="20240704 16:12:41.637"/>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${URL}</arg>
<arg>${BODY}</arg>
<doc>*DEPRECATED* Please use `POST On Session` instead.</doc>
<msg timestamp="20240704 16:12:41.638" level="WARN">Keyword 'RequestsLibrary.Post Request' is deprecated. Please use `POST On Session` instead.</msg>
<msg timestamp="20240704 16:12:42.202" level="INFO">POST Request : url=http://jsonplaceholder.typicode.com/users 
 path_url=/users 
 headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '408'} 
 body=b'{"name": "Aron Tiago","username": "Bret","email": "Sincere@april.biz","address": {"street": "Kulas Light","suite": "Apt. 556","city": "Gwenborough","zipcode": "92998-3874","geo": {"lat": "-37.3159","lng": "81.1496"}},"phone": "1-770-736-8031 x56442","website": "hildegard.org","company": {"name": "Romaguera-Crona","catchPhrase": "Multi-layered client-server neural-net","bs": "harness real-time e-markets"}}' 
 </msg>
<msg timestamp="20240704 16:12:42.203" level="INFO">POST Response : url=http://jsonplaceholder.typicode.com/users 
 status=201, reason=Created 
 headers={'Date': 'Thu, 04 Jul 2024 19:13:41 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '14', 'Connection': 'keep-alive', 'Report-To': '{"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1720120421&amp;sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d&amp;s=OSkCcJnCVTg9gInyyqOefjajfaWMoaUgRwwXa1ClOmY%3D"}]}', 'Reporting-Endpoints': 'heroku-nel=https://nel.heroku.com/reports?ts=1720120421&amp;sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d&amp;s=OSkCcJnCVTg9gInyyqOefjajfaWMoaUgRwwXa1ClOmY%3D', 'Nel': '{"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '999', 'X-Ratelimit-Reset': '1720120430', 'Vary': 'Origin, X-HTTP-Method-Override, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'no-cache', 'Pragma': 'no-cache', 'Expires': '-1', 'Access-Control-Expose-Headers': 'Location', 'Location': 'http://jsonplaceholder.typicode.com/users/11', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"e-HA6WWAG/c4REvZ4q9d0N16BTb2A"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'DYNAMIC', 'Server': 'cloudflare', 'CF-RAY': '89e16f182ccc6d75-GIG', 'alt-svc': 'h3=":443"; ma=86400'} 
 body={
  "id": 11
} 
 </msg>
<msg timestamp="20240704 16:12:42.203" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20240704 16:12:41.638" endtime="20240704 16:12:42.204"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20240704 16:12:42.204" endtime="20240704 16:12:42.205"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>201</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20240704 16:12:42.209" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240704 16:12:42.206" endtime="20240704 16:12:42.209"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${json_response}</var>
<arg>${response.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240704 16:12:42.211" level="INFO">${json_response} = {'id': 11}</msg>
<status status="PASS" starttime="20240704 16:12:42.209" endtime="20240704 16:12:42.211"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${json_response}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240704 16:12:42.212" level="INFO">{'id': 11}</msg>
<status status="PASS" starttime="20240704 16:12:42.211" endtime="20240704 16:12:42.212"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240704 16:12:42.214" level="INFO">201</msg>
<status status="PASS" starttime="20240704 16:12:42.212" endtime="20240704 16:12:42.214"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${response.content}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240704 16:12:42.215" level="INFO">{
  "id": 11
}</msg>
<status status="PASS" starttime="20240704 16:12:42.214" endtime="20240704 16:12:42.215"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${response_content_string}</var>
<arg>${response.content}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20240704 16:12:42.217" level="INFO">${response_content_string} = {
  "id": 11
}</msg>
<status status="PASS" starttime="20240704 16:12:42.216" endtime="20240704 16:12:42.217"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${response_content_string}</arg>
<arg>"id": 11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240704 16:12:42.217" endtime="20240704 16:12:42.218"/>
</kw>
<status status="PASS" starttime="20240704 16:12:41.635" endtime="20240704 16:12:42.218"/>
</test>
<test id="s1-t3" name="Put" line="41">
<kw name="Set Variable" library="BuiltIn">
<var>${BODY}</var>
<arg>{"id": 1,"name": "nome modificado"}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240704 16:12:42.220" level="INFO">${BODY} = {"id": 1,"name": "nome modificado"}</msg>
<status status="PASS" starttime="20240704 16:12:42.219" endtime="20240704 16:12:42.220"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${URL}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20240704 16:12:42.220" level="INFO">Creating Session using : alias=session, url=http://jsonplaceholder.typicode.com/users, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20240704 16:12:42.220" endtime="20240704 16:12:42.221"/>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${URL}/1</arg>
<arg>${BODY}</arg>
<doc>*DEPRECATED* Please use `PUT On Session` instead.</doc>
<msg timestamp="20240704 16:12:42.221" level="WARN">Keyword 'RequestsLibrary.Put Request' is deprecated. Please use `PUT On Session` instead.</msg>
<msg timestamp="20240704 16:12:43.045" level="INFO">PUT Request : url=http://jsonplaceholder.typicode.com/users/1 
 path_url=/users/1 
 headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '35'} 
 body=b'{"id": 1,"name": "nome modificado"}' 
 </msg>
<msg timestamp="20240704 16:12:43.045" level="INFO">PUT Response : url=http://jsonplaceholder.typicode.com/users/1 
 status=200, reason=OK 
 headers={'Date': 'Thu, 04 Jul 2024 19:13:42 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '13', 'Connection': 'keep-alive', 'Report-To': '{"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1720120422&amp;sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d&amp;s=cN3bnPSr26CMH1MgPx5yY97P5h6za3pDu9pDuhaoznI%3D"}]}', 'Reporting-Endpoints': 'heroku-nel=https://nel.heroku.com/reports?ts=1720120422&amp;sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d&amp;s=cN3bnPSr26CMH1MgPx5yY97P5h6za3pDu9pDuhaoznI%3D', 'Nel': '{"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '998', 'X-Ratelimit-Reset': '1720120430', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'no-cache', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"d-p13Thq1mbIznE8TsFv4BmW8SRpg"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'DYNAMIC', 'Server': 'cloudflare', 'CF-RAY': '89e16f1c994972d1-GIG', 'alt-svc': 'h3=":443"; ma=86400'} 
 body={
  "id": 1
} 
 </msg>
<msg timestamp="20240704 16:12:43.045" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240704 16:12:42.221" endtime="20240704 16:12:43.046"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20240704 16:12:43.046" endtime="20240704 16:12:43.046"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20240704 16:12:43.047" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240704 16:12:43.046" endtime="20240704 16:12:43.047"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${json_response}</var>
<arg>${response.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240704 16:12:43.048" level="INFO">${json_response} = {'id': 1}</msg>
<status status="PASS" starttime="20240704 16:12:43.047" endtime="20240704 16:12:43.048"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${json_response}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240704 16:12:43.048" level="INFO">{'id': 1}</msg>
<status status="PASS" starttime="20240704 16:12:43.048" endtime="20240704 16:12:43.048"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240704 16:12:43.049" level="INFO">200</msg>
<status status="PASS" starttime="20240704 16:12:43.048" endtime="20240704 16:12:43.049"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${response.content}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240704 16:12:43.050" level="INFO">{
  "id": 1
}</msg>
<status status="PASS" starttime="20240704 16:12:43.049" endtime="20240704 16:12:43.050"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${response_content_string}</var>
<arg>${response.content}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20240704 16:12:43.051" level="INFO">${response_content_string} = {
  "id": 1
}</msg>
<status status="PASS" starttime="20240704 16:12:43.050" endtime="20240704 16:12:43.051"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${response_content_string}</arg>
<arg>"id": 1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240704 16:12:43.051" endtime="20240704 16:12:43.051"/>
</kw>
<status status="PASS" starttime="20240704 16:12:42.219" endtime="20240704 16:12:43.051"/>
</test>
<test id="s1-t4" name="Delete" line="57">
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${URL}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20240704 16:12:43.052" level="INFO">Creating Session using : alias=session, url=http://jsonplaceholder.typicode.com/users, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20240704 16:12:43.052" endtime="20240704 16:12:43.053"/>
</kw>
<kw name="Delete Request" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${URL}/2</arg>
<doc>*DEPRECATED* Please use `DELETE On Session` instead.</doc>
<msg timestamp="20240704 16:12:43.053" level="WARN">Keyword 'RequestsLibrary.Delete Request' is deprecated. Please use `DELETE On Session` instead.</msg>
<msg timestamp="20240704 16:12:43.762" level="INFO">DELETE Request : url=http://jsonplaceholder.typicode.com/users/2 
 path_url=/users/2 
 headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20240704 16:12:43.762" level="INFO">DELETE Response : url=http://jsonplaceholder.typicode.com/users/2 
 status=200, reason=OK 
 headers={'Date': 'Thu, 04 Jul 2024 19:13:42 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '2', 'Connection': 'keep-alive', 'Report-To': '{"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1720120422&amp;sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d&amp;s=cN3bnPSr26CMH1MgPx5yY97P5h6za3pDu9pDuhaoznI%3D"}]}', 'Reporting-Endpoints': 'heroku-nel=https://nel.heroku.com/reports?ts=1720120422&amp;sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d&amp;s=cN3bnPSr26CMH1MgPx5yY97P5h6za3pDu9pDuhaoznI%3D', 'Nel': '{"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '997', 'X-Ratelimit-Reset': '1720120430', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'no-cache', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"2-vyGp6PvFo4RvsFtPoIWeCReyIC8"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'DYNAMIC', 'Server': 'cloudflare', 'CF-RAY': '89e16f211f967a41-GIG', 'alt-svc': 'h3=":443"; ma=86400'} 
 body={} 
 </msg>
<msg timestamp="20240704 16:12:43.763" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240704 16:12:43.053" endtime="20240704 16:12:43.763"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20240704 16:12:43.763" endtime="20240704 16:12:43.763"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20240704 16:12:43.764" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240704 16:12:43.763" endtime="20240704 16:12:43.764"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${json_response}</var>
<arg>${response.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240704 16:12:43.765" level="INFO">${json_response} = {}</msg>
<status status="PASS" starttime="20240704 16:12:43.764" endtime="20240704 16:12:43.765"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${json_response}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240704 16:12:43.767" level="INFO">{}</msg>
<status status="PASS" starttime="20240704 16:12:43.765" endtime="20240704 16:12:43.767"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240704 16:12:43.769" level="INFO">200</msg>
<status status="PASS" starttime="20240704 16:12:43.768" endtime="20240704 16:12:43.769"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${response.content}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240704 16:12:43.770" level="INFO">{}</msg>
<status status="PASS" starttime="20240704 16:12:43.769" endtime="20240704 16:12:43.770"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${response_content_string}</var>
<arg>${response.content}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20240704 16:12:43.771" level="INFO">${response_content_string} = {}</msg>
<status status="PASS" starttime="20240704 16:12:43.770" endtime="20240704 16:12:43.771"/>
</kw>
<status status="PASS" starttime="20240704 16:12:43.052" endtime="20240704 16:12:43.771"/>
</test>
<status status="PASS" starttime="20240704 16:12:41.154" endtime="20240704 16:12:43.772"/>
</suite>
<statistics>
<total>
<stat pass="4" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="4" fail="0" skip="0" id="s1" name="testeAPI">testeAPI</stat>
</suite>
</statistics>
<errors>
<msg timestamp="20240704 16:12:41.223" level="WARN">Keyword 'RequestsLibrary.Get Request' is deprecated. Please use `GET On Session` instead.</msg>
<msg timestamp="20240704 16:12:41.638" level="WARN">Keyword 'RequestsLibrary.Post Request' is deprecated. Please use `POST On Session` instead.</msg>
<msg timestamp="20240704 16:12:42.221" level="WARN">Keyword 'RequestsLibrary.Put Request' is deprecated. Please use `PUT On Session` instead.</msg>
<msg timestamp="20240704 16:12:43.053" level="WARN">Keyword 'RequestsLibrary.Delete Request' is deprecated. Please use `DELETE On Session` instead.</msg>
</errors>
</robot>
